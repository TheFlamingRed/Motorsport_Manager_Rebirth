using System;
using UnityEngine;

// Token: 0x020006C6 RID: 1734
public class PlayerScreen : UIScreen
{
	// Token: 0x060030E8 RID: 12520
	public PlayerScreen()
	{
	}

	// Token: 0x060030E9 RID: 12521
	public override void OnStart()
	{
		base.OnStart();
		this.playerWidget.OnStart();
	}

	// Token: 0x060030EA RID: 12522
	public override void OnEnter()
	{
		base.OnEnter();
		DLCManager dlcManager = App.instance.dlcManager;
		dlcManager.OnOwnedDlcChanged = (Action)Delegate.Combine(dlcManager.OnOwnedDlcChanged, new Action(this.jobsWidget.Setup));
		base.showNavigationBars = true;
		this.mPlayer = Game.instance.player;
		bool flag = !this.mPlayer.IsUnemployed();
		this.playerWidget.Setup(this.mPlayer);
		this.statsWidget.Setup(this.mPlayer);
		this.careerWidget.Setup(this.mPlayer);
		this.trophiesWidget.Setup(this.mPlayer);
		this.jobsWidget.Setup();
		GameUtility.SetActive(this.notificationsWidget.gameObject, !flag);
		GameUtility.SetActive(this.applicationsWidget.gameObject, this.mPlayer.jobApplications.Count > 0);
		GameUtility.SetActive(this.chairmanWidget.gameObject, flag);
		if (!flag)
		{
			this.notificationsWidget.Setup();
		}
		else
		{
			this.chairmanWidget.Setup(this.mPlayer);
		}
		if (this.applicationsWidget.gameObject.activeSelf)
		{
			this.applicationsWidget.Setup();
		}
		scSoundManager.Instance.PlaySound(SoundID.Sfx_TransitionHome, 0f);
	}

	// Token: 0x060030EB RID: 12523
	public override void OnExit()
	{
		base.OnExit();
		this.notificationsWidget.OnExit();
		DLCManager dlcManager = App.instance.dlcManager;
		dlcManager.OnOwnedDlcChanged = (Action)Delegate.Remove(dlcManager.OnOwnedDlcChanged, new Action(this.jobsWidget.Setup));
	}

	// Token: 0x060030EC RID: 12524
	public void OnGUI()
	{
		GUIStyle guistyle = new GUIStyle();
		guistyle.alignment = TextAnchor.MiddleCenter;
		guistyle.normal.textColor = Color.grey;
		guistyle.fontSize = 14;
		GUIStyle guistyle2 = new GUIStyle();
		guistyle2.alignment = TextAnchor.MiddleCenter;
		guistyle2.normal.textColor = Color.white;
		guistyle2.fontSize = 15;
		GUI.Button(new Rect((float)Screen.width * 0.07f, (float)Screen.height * 0.375f, 100f, 100f), "Player Salary ", guistyle);
		GUI.Button(new Rect((float)Screen.width * 0.25f, (float)Screen.height * 0.375f, 100f, 100f), "Player Networth", guistyle);
		GUI.Button(new Rect((float)Screen.width * 0.07f, (float)Screen.height * 0.395f, 100f, 100f), "£" + Game.instance.player.playerSalary.ToString(), guistyle2);
		GUI.Button(new Rect((float)Screen.width * 0.25f, (float)Screen.height * 0.395f, 100f, 100f), "£" + Game.instance.player.playerMoney.ToString(), guistyle2);
		if (Game.instance.player.rebirthDebug)
		{
			GUI.Button(new Rect((float)Screen.width * 0.05f, (float)Screen.height * 0.1f, 200f, 900f), string.Concat(new string[]
			{
				"Debug Menu : ",
				Game.instance.player.rebirthDebug.ToString(),
				"\n",
				Game.instance.player.managementBuyoutmanagementBuyoutOn,
				"\n",
				Game.instance.player.managementBuyoutMainText + " " + Game.instance.player.managementBuyoutSubtext,
				"\n",
				Game.instance.player.managementBuyoutLogoStyle.ToString(),
				"\n",
				Game.instance.player.managementBuyoutPrimaryColour,
				"\n",
				Game.instance.player.managementBuyoutSecondaryColour,
				"\n Player Net Worth ",
				Game.instance.player.playerMoney.ToString(),
				"\n Player Salary ",
				Game.instance.player.playerSalary.ToString(),
				"\n Current Team Net Worth \n",
				(Game.instance.player.team.GetStarsStat() * Game.instance.player.team.GetStarsStat() * 2000000f).ToString()
			}));
			if (GUI.Button(new Rect((float)Screen.width * 0.16f, (float)Screen.height * 0.1f, 200f, 100f), "Fire Player"))
			{
				Game.instance.MakePlayerUnemployed();
			}
			if (GUI.Button(new Rect((float)Screen.width * 0.27f, (float)Screen.height * 0.1f, 200f, 100f), "Fire & Rehire Player"))
			{
				Team team = Game.instance.player.team;
				Game.instance.MakePlayerUnemployed();
				Game.instance.MakePlayerEmployed(team);
			}
			if (GUI.Button(new Rect((float)Screen.width * 0.38f, (float)Screen.height * 0.1f, 200f, 100f), "ManagementBuyout"))
			{
				Game.instance.player.team.customLogo.teamFirstName = Game.instance.player.managementBuyoutMainText;
				Game.instance.player.team.customLogo.teamLasttName = Game.instance.player.managementBuyoutSubtext;
				Game.instance.player.team.name = Game.instance.player.managementBuyoutFullname;
				Game.instance.player.team.customLogo.styleID = Game.instance.player.managementBuyoutLogoStyle - 1;
				Game.instance.player.team.GetTeamColor().customLogoColor.primary = Game.instance.player.team.GetTeamColor().livery.primary;
				Game.instance.player.team.GetTeamColor().customLogoColor.secondary = Game.instance.player.team.GetTeamColor().livery.secondary;
				Game.instance.player.hasCreatedTeam = true;
				Game.instance.player.createdTeamID = Game.instance.player.team.teamID;
				Game.instance.player.team.isCreatedByPlayer = true;
				MovieScreen screen = UIManager.instance.GetScreen<MovieScreen>();
				screen.PlayTeamMovie(SoundID.Video_TeamLogo, Game.instance.player.team.teamID);
				screen.SetNextScreen("PlayerScreen", 1.5f, null);
				UIManager.instance.ChangeScreen("MovieScreen", UIManager.ScreenTransition.None, 0f, null, UIManager.NavigationType.Normal);
				Game.instance.player.team.HandleChairmanRetirementRequest(Game.instance.player.team.chairman);
				UIManager.instance.ClearNavigationStacks();
				Game.instance.player.team.chairman.ModifyHappiness(100f, "Happy to invest in the team");
			}
			if (GUI.Button(new Rect((float)Screen.width * 0.49f, (float)Screen.height * 0.1f, 200f, 100f), "Skip Race Weekends: " + Game.instance.player.skipraceweekends.ToString()))
			{
				Game.instance.player.skipraceweekends = !Game.instance.player.skipraceweekends;
			}
			if (GUI.Button(new Rect((float)Screen.width * 0.6f, (float)Screen.height * 0.1f, 200f, 100f), string.Concat(new string[]
			{
				"Team Rebrand : \n",
				Game.instance.player.team.championship.preSeasonStartDate.ToString(),
				"\n",
				Game.instance.player.team.championship.preSeasonEndDate.ToString(),
				"\n",
				Game.instance.player.team.championship.preSeasonStartDate.CompareTo(Game.instance.player.team.championship.preSeasonEndDate).ToString(),
				"\n",
				Game.instance.player.team.championship.preSeasonEndDate.CompareTo(Game.instance.player.team.championship.preSeasonStartDate).ToString()
			})))
			{
				Game.instance.teamManager.TeamRebrand();
			}
			if (GUI.Button(new Rect((float)Screen.width * 0.71f, (float)Screen.height * 0.1f, 200f, 100f), "Add Money To Player"))
			{
				Game.instance.player.playerMoney += 1000000L;
			}
			if (GUI.Button(new Rect((float)Screen.width * 0.82f, (float)Screen.height * 0.1f, 200f, 100f), "Invest in Team"))
			{
				long num = (long)Mathf.FloorToInt((float)Game.instance.player.playerMoney * 0.5f);
				float num2 = Mathf.Max(20f, Mathf.Floor((float)Game.instance.player.playerMoney * 0.5f) / 1000000f);
				Game.instance.player.team.chairman.ModifyHappiness(num2, "Pleased you invested in the team");
				Transaction transaction = new Transaction(Transaction.Group.GlobalMotorsport, Transaction.Type.Credit, num, "Investment from " + Game.instance.player.firstName + " " + Game.instance.player.lastName);
				Game.instance.player.team.financeController.finance.ProcessTransactions(null, null, true, new Transaction[]
				{
					transaction
				});
				Game.instance.player.playerMoney -= num;
			}
		}
	}

	// Token: 0x04002CBE RID: 11454
	public UIPlayerWidget playerWidget;

	// Token: 0x04002CBF RID: 11455
	public UIPlayerStatsWidget statsWidget;

	// Token: 0x04002CC0 RID: 11456
	public UIPlayerNotificationsWidget notificationsWidget;

	// Token: 0x04002CC1 RID: 11457
	public UIPlayerHappinessWidget chairmanWidget;

	// Token: 0x04002CC2 RID: 11458
	public UIPlayerAvailableJobsWidget jobsWidget;

	// Token: 0x04002CC3 RID: 11459
	public UIPlayerJobApplicationsWidget applicationsWidget;

	// Token: 0x04002CC4 RID: 11460
	public PersonCareerWidget careerWidget;

	// Token: 0x04002CC5 RID: 11461
	public UIPlayerTrophiesWidget trophiesWidget;

	// Token: 0x04002CC6 RID: 11462
	private Player mPlayer;
}
