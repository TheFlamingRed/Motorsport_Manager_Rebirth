using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using MM2;
using UnityEngine;

// Token: 0x0200078E RID: 1934
public class CarDesignScreen : UIScreen
{
	// Token: 0x060035AC RID: 13740
	public CarDesignScreen()
	{
		this.mSelectedSupplier = new Supplier[4];
		this.mCurrentCamera = string.Empty;
		this.mNextCamera = string.Empty;
	}

	// Token: 0x060035AD RID: 13741
	public override void OnStart()
	{
		base.OnStart();
		this.supplierSelectionWidget.OnStart();
	}

	// Token: 0x060035AE RID: 13742
	public override void OnEnter()
	{
		base.OnEnter();
		this.supplierRollover.Setup(Game.instance.player.team, true);
		UIManager.instance.ClearNavigationStacks();
		if (Game.instance.player.team.championship.rules.isERSAdvancedModeActive || (Game.instance.player.team.championship.rules.isEnergySystemActive && !Game.instance.player.team.championship.rules.shouldChargeUsingStandingsPosition))
		{
			this.mSelectedSupplier = new Supplier[5];
		}
		else
		{
			this.mSelectedSupplier = new Supplier[4];
		}
		this.ResetSuppliers();
		this.estimatedOutputWidget.OnEnter();
		this.preferencesWidget.OnEnter();
		this.supplierSelectionWidget.OnEnter();
		this.UpdateStats();
		this.dontAddToBackStack = true;
		base.canUseScreenHotkeys = false;
		base.canEnterPreferencesScreen = false;
		base.needsPlayerConfirmation = true;
		base.showNavigationBars = true;
		this.SetScene();
		long moneyForCarDev = Game.instance.player.team.financeController.moneyForCarDev;
		if (moneyForCarDev != 0L)
		{
			Transaction item = new Transaction(Transaction.Group.CarParts, Transaction.Type.Credit, moneyForCarDev, Localisation.LocaliseID("PSG_10010580", null));
			Game.instance.player.team.financeController.unnallocatedTransactions.Add(item);
			TeamFinanceController.ShowPopupToPlayer(null);
			Game.instance.player.team.financeController.moneyForCarDev = 0L;
		}
		scSoundManager.Instance.PlaySound(SoundID.Sfx_TransitionFactory, 0f);
		base.SetBottomBarMode(UIBottomBar.Mode.Core);
		UIManager.instance.navigationBars.bottomBar.MarkContinueButtonForUpdate();
	}

	// Token: 0x060035AF RID: 13743
	private void SetScene()
	{
		SceneManager.instance.SwitchScene("GarageNextYearCar");
		GameObject sceneGameObject = SceneManager.instance.GetSceneGameObject("GarageNextYearCar");
		if (sceneGameObject != null && base.screenMode == UIScreen.ScreenMode.Mode3D)
		{
			StudioScene component = sceneGameObject.GetComponent<StudioScene>();
			if (component != null)
			{
				TeamColor.LiveryColour liveryColour = new TeamColor.LiveryColour();
				switch (Game.instance.player.team.championship.series)
				{
				case Championship.Series.SingleSeaterSeries:
					this.SetCamera("RearPackageCamera");
					this.preferencesWidget.gameObject.SetActive(true);
					break;
				case Championship.Series.GTSeries:
					this.SetCamera("GTCamera");
					this.preferencesWidget.gameObject.SetActive(false);
					liveryColour.SetAllColours(Color.black);
					break;
				case Championship.Series.EnduranceSeries:
					this.SetCamera("EnduranceCamera");
					this.preferencesWidget.gameObject.SetActive(false);
					liveryColour.SetAllColours(Color.white);
					break;
				}
				Game.instance.player.team.carManager.nextFrontendCar.SetColours(liveryColour);
				component.SetCarType(StudioScene.Car.NextYearCar);
				component.SetSeries(Game.instance.player.team.championship.series);
				component.SetCarVisualsToCurrentGame();
			}
		}
	}

	// Token: 0x060035B0 RID: 13744
	public override UIScreen.NavigationButtonEvent OnContinueButton()
	{
		if (!this.supplierSelectionWidget.IsComplete())
		{
			this.supplierSelectionWidget.GoToNextStep();
		}
		else
		{
			this.OnStartDesign();
		}
		return UIScreen.NavigationButtonEvent.HandledByScreen;
	}

	// Token: 0x060035B1 RID: 13745
	public void Update()
	{
		GameUtility.SetActive(this.unselectedOptionsWarningContainter, !this.supplierSelectionWidget.IsComplete());
	}

	// Token: 0x060035B2 RID: 13746
	public void OnStartDesign()
	{
		CarChassisStats newChassis = new CarChassisStats();
		foreach (KeyValuePair<CarChassisStats.Stats, float> keyValuePair in this.preferencesWidget.sliderStats)
		{
			switch (keyValuePair.Key)
			{
			case CarChassisStats.Stats.TyreWear:
				newChassis.tyreWear = keyValuePair.Value;
				break;
			case CarChassisStats.Stats.TyreHeating:
				newChassis.tyreHeating = keyValuePair.Value;
				break;
			case CarChassisStats.Stats.FuelEfficiency:
				newChassis.fuelEfficiency = keyValuePair.Value;
				break;
			case CarChassisStats.Stats.Improvability:
				newChassis.improvability = keyValuePair.Value;
				break;
			}
		}
		for (int i = 0; i < this.mSelectedSupplier.Length; i++)
		{
			Supplier supplier = this.mSelectedSupplier[i];
			switch (supplier.supplierType)
			{
			case Supplier.SupplierType.Engine:
				newChassis.supplierEngine = supplier;
				break;
			case Supplier.SupplierType.Brakes:
				newChassis.supplierBrakes = supplier;
				break;
			case Supplier.SupplierType.Fuel:
				newChassis.supplierFuel = supplier;
				break;
			case Supplier.SupplierType.Materials:
				newChassis.supplierMaterials = supplier;
				break;
			case Supplier.SupplierType.Battery:
				newChassis.supplierBattery = supplier;
				break;
			case Supplier.SupplierType.ERSAdvanced:
				newChassis.supplierERSAdvanced = supplier;
				break;
			}
		}
		newChassis.ApplySupplierStats();
		Finance finance = Game.instance.player.team.financeController.finance;
		Team team = Game.instance.player.team;
		Transaction brakesTransaction = newChassis.GetBrakesTransaction(team);
		Transaction engineTransaction = newChassis.GetEngineTransaction(team);
		Transaction fuelTransaction = newChassis.GetFuelTransaction(team);
		Transaction materialTransaction = newChassis.GetMaterialTransaction(team);
		Transaction transaction = null;
		Transaction transaction2 = null;
		if (!Game.instance.player.team.championship.rules.isERSAdvancedModeActive && Game.instance.player.team.championship.rules.isEnergySystemActive && !Game.instance.player.team.championship.rules.shouldChargeUsingStandingsPosition)
		{
			transaction = newChassis.GetBatteryTransaction(team);
		}
		if (Game.instance.player.team.championship.rules.isERSAdvancedModeActive)
		{
			transaction2 = newChassis.GetERSTransaction(team);
		}
		long totalCost = brakesTransaction.amount + engineTransaction.amount + fuelTransaction.amount + materialTransaction.amount;
		if (transaction != null)
		{
			totalCost += transaction.amount;
		}
		Action inOnTransactionSucess = delegate()
		{
			UIManager.instance.ClearNavigationStacks();
			this.needsPlayerConfirmation = false;
			Game.instance.player.team.carManager.nextYearCarDesign.StartDesign(newChassis);
			((PreSeasonState)App.instance.gameStateManager.currentState).SetStage(PreSeasonState.PreSeasonStage.PartAdapting);
			UIManager.instance.ChangeScreen("CarScreen", UIManager.ScreenTransition.None, 0f, null, UIManager.NavigationType.Normal);
			this.UpdateCarDesignAchievements(totalCost);
		};
		if (transaction != null && transaction2 != null)
		{
			finance.ProcessTransactions(inOnTransactionSucess, null, true, new Transaction[]
			{
				engineTransaction,
				fuelTransaction,
				materialTransaction,
				brakesTransaction,
				transaction,
				transaction2
			});
			return;
		}
		if (transaction != null)
		{
			finance.ProcessTransactions(inOnTransactionSucess, null, true, new Transaction[]
			{
				engineTransaction,
				fuelTransaction,
				materialTransaction,
				brakesTransaction,
				transaction
			});
			return;
		}
		if (transaction2 != null)
		{
			finance.ProcessTransactions(inOnTransactionSucess, null, true, new Transaction[]
			{
				engineTransaction,
				fuelTransaction,
				materialTransaction,
				brakesTransaction,
				transaction2
			});
			return;
		}
		finance.ProcessTransactions(inOnTransactionSucess, null, true, new Transaction[]
		{
			engineTransaction,
			fuelTransaction,
			materialTransaction,
			brakesTransaction
		});
	}

	// Token: 0x060035B3 RID: 13747
	public override void OpenConfirmDialogBox(Action inAction)
	{
		GenericConfirmation dialog = UIManager.instance.dialogBoxManager.GetDialog<GenericConfirmation>();
		Action inCancelAction = delegate()
		{
		};
		string inTitle = Localisation.LocaliseID("PSG_10001275", null);
		string inText = Localisation.LocaliseID("PSG_10009119", null);
		string inCancelString = Localisation.LocaliseID("PSG_10009081", null);
		UIManager.instance.dialogBoxManager.Show("GenericConfirmation");
		dialog.Show(inCancelAction, inCancelString, null, string.Empty, inText, inTitle);
	}

	// Token: 0x060035B4 RID: 13748
	public void SetCamera(string inString)
	{
		this.mNextCamera = inString;
		if (this.mNextCamera == this.mCurrentCamera)
		{
			return;
		}
		App.instance.StopCoroutine(this.ChangeCamera());
		App.instance.StartCoroutine(this.ChangeCamera());
	}

	// Token: 0x060035B5 RID: 13749
	private IEnumerator ChangeCamera()
	{
		GameObject sceneGameObject = SceneManager.instance.GetSceneGameObject("GarageNextYearCar");
		if (sceneGameObject != null && base.screenMode == UIScreen.ScreenMode.Mode3D)
		{
			StudioScene studioScene = sceneGameObject.GetComponent<StudioScene>();
			Animator animator = null;
			if (this.mCurrentCamera != string.Empty)
			{
				animator = studioScene.GetCamera(this.mCurrentCamera).GetComponent<Animator>();
				animator.SetTrigger(AnimationHashes.FadeOut);
			}
			while (animator != null && animator.GetCurrentAnimatorStateInfo(0).normalizedTime < 1f)
			{
				yield return null;
			}
			studioScene.EnableCamera(this.mNextCamera);
			this.mCurrentCamera = this.mNextCamera;
			studioScene = null;
			animator = null;
			studioScene = null;
			animator = null;
			studioScene = null;
			animator = null;
			studioScene = null;
			animator = null;
			studioScene = null;
			animator = null;
			studioScene = null;
			animator = null;
		}
		yield break;
	}

	// Token: 0x060035B6 RID: 13750
	public void SetSupplier(Supplier.SupplierType inType, Supplier inSupplier)
	{
		if (inType == Supplier.SupplierType.ERSAdvanced)
		{
			inType = Supplier.SupplierType.Battery;
		}
		this.mSelectedSupplier[(int)inType] = inSupplier;
		this.UpdateStats();
	}

	// Token: 0x060035B7 RID: 13751
	public void UpdateStats()
	{
		this.estimatedOutputWidget.ResetStats();
		for (int i = 0; i < this.mSelectedSupplier.Length; i++)
		{
			if (this.mSelectedSupplier[i] != null)
			{
				foreach (KeyValuePair<CarChassisStats.Stats, float> keyValuePair in this.mSelectedSupplier[i].supplierStats)
				{
					this.estimatedOutputWidget.AddToStat(keyValuePair.Key, keyValuePair.Value);
				}
			}
		}
		foreach (KeyValuePair<CarChassisStats.Stats, float> keyValuePair2 in this.preferencesWidget.sliderStats)
		{
			this.estimatedOutputWidget.SetMaxStat(keyValuePair2.Key, keyValuePair2.Value);
		}
	}

	// Token: 0x060035B8 RID: 13752
	public void ShowStatContibution(Supplier inSupplier)
	{
		if (inSupplier == null)
		{
			return;
		}
		foreach (KeyValuePair<CarChassisStats.Stats, float> keyValuePair in inSupplier.supplierStats)
		{
			this.estimatedOutputWidget.SetSupplierContribution(keyValuePair.Key, keyValuePair.Value);
		}
	}

	// Token: 0x060035B9 RID: 13753
	public void HideStatContribution()
	{
		this.estimatedOutputWidget.HideSupplierContribution();
	}

	// Token: 0x060035BA RID: 13754
	private void ResetSuppliers()
	{
		for (int i = 0; i < this.mSelectedSupplier.Length; i++)
		{
			this.mSelectedSupplier[i] = null;
		}
	}

	// Token: 0x060035BB RID: 13755
	private bool SuppliersChosen()
	{
		bool result = true;
		for (int i = 0; i < this.mSelectedSupplier.Length; i++)
		{
			if (this.mSelectedSupplier[i] == null)
			{
				result = false;
				break;
			}
		}
		return result;
	}

	// Token: 0x060035BC RID: 13756
	public override void OnExit()
	{
		base.OnExit();
		Game.instance.player.team.carManager.frontendCar.gameObject.SetActive(false);
		SceneManager.instance.LeaveCurrentScene();
	}

	// Token: 0x060035BD RID: 13757
	private void UpdateCarDesignAchievements(long inTotalCost)
	{
		float num = 3E+07f;
		if ((float)inTotalCost > num)
		{
			App.instance.steamAchievementsManager.UnlockAchievement(Achievements.AchievementEnum.Spend_30m_On_New_Car);
		}
	}

	// Token: 0x170006F8 RID: 1784
	// (get) Token: 0x060035BE RID: 13758
	public Supplier[] supplierList
	{
		get
		{
			return this.mSelectedSupplier;
		}
	}

	// Token: 0x060035BF RID: 13759
	public void OnGUI()
	{
		GUI.Button(this.button0, this.texture2D, GUIStyle.none);
		if (this.mSelectedSupplier[0] != null)
		{
			Texture2D supplierLogo = App.instance.assetManager.GetSupplierLogo(this.mSelectedSupplier[0]);
			GUI.Button(this.button1, supplierLogo, GUIStyle.none);
			int areaImprovementa = this.mSelectedSupplier[0].areaImprovementa;
			switch (this.mSelectedSupplier[0].areaImprovementStrengtha)
			{
			case 1:
				this.image = this.texture2D2;
				break;
			case 2:
				this.image = this.texture2D3;
				break;
			case 3:
				this.image = this.texture2D4;
				break;
			case 4:
				this.image = this.texture2D5;
				break;
			case 5:
				this.image = this.texture2D6;
				break;
			}
			this.guistyle.normal.textColor = Color.white;
			this.guistyle.alignment = TextAnchor.MiddleCenter;
			this.guistyle.fontSize = 14;
			switch (areaImprovementa)
			{
			case 0:
				this.guistyle.normal.background = this.texture2D7;
				this.guistyle.hover.background = this.texture2D8;
				break;
			case 1:
				this.guistyle.normal.background = this.texture2D9;
				this.guistyle.hover.background = this.texture2D10;
				break;
			case 2:
				this.guistyle.normal.background = this.texture2D11;
				this.guistyle.hover.background = this.texture2D12;
				break;
			case 3:
				this.guistyle.normal.background = this.texture2D13;
				this.guistyle.hover.background = this.texture2D14;
				break;
			case 4:
				this.guistyle.normal.background = this.texture2D15;
				this.guistyle.hover.background = this.texture2D16;
				break;
			case 5:
				this.guistyle.normal.background = this.texture2D17;
				this.guistyle.hover.background = this.texture2D18;
				break;
			}
			GUI.Button(this.button2, this.image, this.guistyle);
		}
		if (this.mSelectedSupplier[2] != null)
		{
			Texture2D supplierLogo2 = App.instance.assetManager.GetSupplierLogo(this.mSelectedSupplier[2]);
			GUI.Button(this.button3, supplierLogo2, GUIStyle.none);
			int areaImprovementa2 = this.mSelectedSupplier[2].areaImprovementa;
			switch (this.mSelectedSupplier[2].areaImprovementStrengtha)
			{
			case 1:
				this.image2 = this.texture2D2;
				break;
			case 2:
				this.image2 = this.texture2D3;
				break;
			case 3:
				this.image2 = this.texture2D4;
				break;
			case 4:
				this.image2 = this.texture2D5;
				break;
			case 5:
				this.image2 = this.texture2D6;
				break;
			}
			this.guistyle2.normal.textColor = Color.white;
			this.guistyle2.alignment = TextAnchor.MiddleCenter;
			this.guistyle2.fontSize = 14;
			switch (areaImprovementa2)
			{
			case 0:
				this.guistyle2.normal.background = this.texture2D7;
				this.guistyle2.hover.background = this.texture2D8;
				break;
			case 1:
				this.guistyle2.normal.background = this.texture2D9;
				this.guistyle2.hover.background = this.texture2D10;
				break;
			case 2:
				this.guistyle2.normal.background = this.texture2D11;
				this.guistyle2.hover.background = this.texture2D12;
				break;
			case 3:
				this.guistyle2.normal.background = this.texture2D13;
				this.guistyle2.hover.background = this.texture2D14;
				break;
			case 4:
				this.guistyle2.normal.background = this.texture2D15;
				this.guistyle2.hover.background = this.texture2D16;
				break;
			case 5:
				this.guistyle2.normal.background = this.texture2D17;
				this.guistyle2.hover.background = this.texture2D18;
				break;
			}
			GUI.Button(this.button4, this.image2, this.guistyle2);
		}
		if (this.mSelectedSupplier[3] != null)
		{
			Texture2D supplierLogo3 = App.instance.assetManager.GetSupplierLogo(this.mSelectedSupplier[3]);
			GUI.Button(this.button5, supplierLogo3, GUIStyle.none);
			int areaImprovementa3 = this.mSelectedSupplier[3].areaImprovementa;
			switch (this.mSelectedSupplier[3].areaImprovementStrengtha)
			{
			case 1:
				this.image3 = this.texture2D2;
				break;
			case 2:
				this.image3 = this.texture2D3;
				break;
			case 3:
				this.image3 = this.texture2D4;
				break;
			case 4:
				this.image3 = this.texture2D5;
				break;
			case 5:
				this.image3 = this.texture2D6;
				break;
			}
			this.guistyle3.normal.textColor = Color.white;
			this.guistyle3.alignment = TextAnchor.MiddleCenter;
			this.guistyle3.fontSize = 14;
			switch (areaImprovementa3)
			{
			case 0:
				this.guistyle3.normal.background = this.texture2D7;
				this.guistyle3.hover.background = this.texture2D8;
				break;
			case 1:
				this.guistyle3.normal.background = this.texture2D9;
				this.guistyle3.hover.background = this.texture2D10;
				break;
			case 2:
				this.guistyle3.normal.background = this.texture2D11;
				this.guistyle3.hover.background = this.texture2D12;
				break;
			case 3:
				this.guistyle3.normal.background = this.texture2D13;
				this.guistyle3.hover.background = this.texture2D14;
				break;
			case 4:
				this.guistyle3.normal.background = this.texture2D15;
				this.guistyle3.hover.background = this.texture2D16;
				break;
			case 5:
				this.guistyle3.normal.background = this.texture2D17;
				this.guistyle3.hover.background = this.texture2D18;
				break;
			}
			GUI.Button(this.button6, this.image3, this.guistyle3);
		}
		if (this.mSelectedSupplier[1] != null)
		{
			Texture2D supplierLogo4 = App.instance.assetManager.GetSupplierLogo(this.mSelectedSupplier[1]);
			GUI.Button(this.button7, supplierLogo4, GUIStyle.none);
			int areaImprovementa4 = this.mSelectedSupplier[1].areaImprovementa;
			switch (this.mSelectedSupplier[1].areaImprovementStrengtha)
			{
			case 1:
				this.image4 = this.texture2D2;
				break;
			case 2:
				this.image4 = this.texture2D3;
				break;
			case 3:
				this.image4 = this.texture2D4;
				break;
			case 4:
				this.image4 = this.texture2D5;
				break;
			case 5:
				this.image4 = this.texture2D6;
				break;
			}
			this.guistyle4.normal.textColor = Color.white;
			this.guistyle4.alignment = TextAnchor.MiddleCenter;
			this.guistyle4.fontSize = 14;
			switch (areaImprovementa4)
			{
			case 0:
				this.guistyle4.normal.background = this.texture2D7;
				this.guistyle4.hover.background = this.texture2D8;
				break;
			case 1:
				this.guistyle4.normal.background = this.texture2D9;
				this.guistyle4.hover.background = this.texture2D10;
				break;
			case 2:
				this.guistyle4.normal.background = this.texture2D11;
				this.guistyle4.hover.background = this.texture2D12;
				break;
			case 3:
				this.guistyle4.normal.background = this.texture2D13;
				this.guistyle4.hover.background = this.texture2D14;
				break;
			case 4:
				this.guistyle4.normal.background = this.texture2D15;
				this.guistyle4.hover.background = this.texture2D16;
				break;
			case 5:
				this.guistyle4.normal.background = this.texture2D17;
				this.guistyle4.hover.background = this.texture2D18;
				break;
			}
			GUI.Button(this.button8, this.image4, this.guistyle4);
		}
	}

	// Token: 0x06004CF5 RID: 19701
	private void Start()
	{
		this.button0 = new Rect((float)Screen.width * 0.5f, (float)Screen.height * 0.1f, (float)Screen.width * 750f / 1920f, (float)Screen.height * 400f / 1080f);
		this.button1 = new Rect((float)Screen.width * 0.7f, (float)Screen.height * 0.15f, (float)Screen.width * 0.2f, (float)Screen.height * 0.05f);
		this.button2 = new Rect((float)Screen.width * 0.8f, (float)Screen.height * 0.16f, 31f, 31f);
		this.button3 = new Rect((float)Screen.width * 0.7f, (float)Screen.height * 0.25f, (float)Screen.width * 0.2f, (float)Screen.height * 0.05f);
		this.button4 = new Rect((float)Screen.width * 0.8f, (float)Screen.height * 0.26f, 31f, 31f);
		this.button5 = new Rect((float)Screen.width * 0.7f, (float)Screen.height * 0.35f, (float)Screen.width * 0.2f, (float)Screen.height * 0.05f);
		this.button6 = new Rect((float)Screen.width * 0.8f, (float)Screen.height * 0.36f, 31f, 31f);
		this.button7 = new Rect((float)Screen.width * 0.7f, (float)Screen.height * 0.45f, (float)Screen.width * 0.2f, (float)Screen.height * 0.05f);
		this.button8 = new Rect((float)Screen.width * 0.8f, (float)Screen.height * 0.46f, 31f, 31f);
		this.texture2D = new Texture2D(62, 62);
		this.texture2D2 = new Texture2D(62, 62);
		this.texture2D3 = new Texture2D(62, 62);
		this.texture2D4 = new Texture2D(62, 62);
		this.texture2D5 = new Texture2D(62, 62);
		this.texture2D6 = new Texture2D(62, 62);
		this.texture2D7 = new Texture2D(62, 62);
		this.texture2D8 = new Texture2D(62, 62);
		this.texture2D9 = new Texture2D(62, 62);
		this.texture2D10 = new Texture2D(62, 62);
		this.texture2D11 = new Texture2D(62, 62);
		this.texture2D12 = new Texture2D(62, 62);
		this.texture2D13 = new Texture2D(62, 62);
		this.texture2D14 = new Texture2D(62, 62);
		this.texture2D15 = new Texture2D(62, 62);
		this.texture2D16 = new Texture2D(62, 62);
		this.texture2D17 = new Texture2D(62, 62);
		this.texture2D18 = new Texture2D(62, 62);
		this.guistyle = new GUIStyle();
		this.guistyle2 = new GUIStyle();
		this.guistyle3 = new GUIStyle();
		this.guistyle4 = new GUIStyle();
		byte[] data = File.ReadAllBytes("texture/carpartbackground.png");
		this.texture2D.LoadImage(data);
		data = File.ReadAllBytes("texture/reg.png");
		this.texture2D2.LoadImage(data);
		data = File.ReadAllBytes("texture/good.png");
		this.texture2D3.LoadImage(data);
		data = File.ReadAllBytes("texture/great.png");
		this.texture2D4.LoadImage(data);
		data = File.ReadAllBytes("texture/epic.png");
		this.texture2D5.LoadImage(data);
		data = File.ReadAllBytes("texture/legend.png");
		this.texture2D6.LoadImage(data);
		data = File.ReadAllBytes("texture/brakes.png");
		this.texture2D7.LoadImage(data);
		data = File.ReadAllBytes("texture/brakesh.png");
		this.texture2D8.LoadImage(data);
		data = File.ReadAllBytes("texture/frontwing.png");
		this.texture2D9.LoadImage(data);
		data = File.ReadAllBytes("texture/frontwingh.png");
		this.texture2D10.LoadImage(data);
		data = File.ReadAllBytes("texture/rearwing.png");
		this.texture2D11.LoadImage(data);
		data = File.ReadAllBytes("texture/rearwingh.png");
		this.texture2D12.LoadImage(data);
		data = File.ReadAllBytes("texture/suspension.png");
		this.texture2D13.LoadImage(data);
		data = File.ReadAllBytes("texture/suspensionh.png");
		this.texture2D14.LoadImage(data);
		data = File.ReadAllBytes("texture/engine.png");
		this.texture2D15.LoadImage(data);
		data = File.ReadAllBytes("texture/engineh.png");
		this.texture2D16.LoadImage(data);
		data = File.ReadAllBytes("texture/gearbox.png");
		this.texture2D17.LoadImage(data);
		data = File.ReadAllBytes("texture/gearboxh.png");
		this.texture2D18.LoadImage(data);
	}

	// Token: 0x040032DC RID: 13020
	public UIEstimatedOutputWidget estimatedOutputWidget;

	// Token: 0x040032DD RID: 13021
	public UIPreferencesSettingsWidget preferencesWidget;

	// Token: 0x040032DE RID: 13022
	public UISupplierSelectionWidget supplierSelectionWidget;

	// Token: 0x040032DF RID: 13023
	public UICarSupplierRolloverTrigger supplierRollover;

	// Token: 0x040032E0 RID: 13024
	public GameObject unselectedOptionsWarningContainter;

	// Token: 0x040032E1 RID: 13025
	private Supplier[] mSelectedSupplier;

	// Token: 0x040032E2 RID: 13026
	private string mCurrentCamera;

	// Token: 0x040032E3 RID: 13027
	private string mNextCamera;

	// Token: 0x04005264 RID: 21092
	private Texture2D texture2D;

	// Token: 0x04005265 RID: 21093
	private Texture2D texture2D2;

	// Token: 0x04005266 RID: 21094
	private Texture2D texture2D3;

	// Token: 0x04005267 RID: 21095
	private Texture2D texture2D4;

	// Token: 0x04005268 RID: 21096
	private Texture2D texture2D5;

	// Token: 0x04005269 RID: 21097
	private Texture2D texture2D6;

	// Token: 0x0400526A RID: 21098
	private Texture2D texture2D7;

	// Token: 0x0400526B RID: 21099
	private Texture2D texture2D8;

	// Token: 0x0400526C RID: 21100
	private Texture2D texture2D9;

	// Token: 0x0400526D RID: 21101
	private Texture2D texture2D10;

	// Token: 0x0400526E RID: 21102
	private Texture2D texture2D11;

	// Token: 0x0400526F RID: 21103
	private Texture2D texture2D12;

	// Token: 0x04005270 RID: 21104
	private Texture2D texture2D13;

	// Token: 0x04005271 RID: 21105
	private Texture2D texture2D14;

	// Token: 0x04005272 RID: 21106
	private Texture2D texture2D15;

	// Token: 0x04005273 RID: 21107
	private Texture2D texture2D16;

	// Token: 0x04005274 RID: 21108
	private Texture2D texture2D17;

	// Token: 0x04005275 RID: 21109
	private Texture2D texture2D18;

	// Token: 0x04005276 RID: 21110
	private Texture2D image;

	// Token: 0x04005277 RID: 21111
	private Texture2D image2;

	// Token: 0x04005278 RID: 21112
	private Texture2D image3;

	// Token: 0x04005279 RID: 21113
	private Texture2D image4;

	// Token: 0x0400527A RID: 21114
	private GUIStyle guistyle;

	// Token: 0x0400527B RID: 21115
	private GUIStyle guistyle2;

	// Token: 0x0400527C RID: 21116
	private GUIStyle guistyle3;

	// Token: 0x0400527D RID: 21117
	private GUIStyle guistyle4;

	// Token: 0x040052AA RID: 21162
	private Rect button0;

	// Token: 0x040052AB RID: 21163
	private Rect button1;

	// Token: 0x040052AC RID: 21164
	private Rect button2;

	// Token: 0x040052AD RID: 21165
	private Rect button3;

	// Token: 0x040052AE RID: 21166
	private Rect button4;

	// Token: 0x040052AF RID: 21167
	private Rect button5;

	// Token: 0x040052B0 RID: 21168
	private Rect button6;

	// Token: 0x040052B1 RID: 21169
	private Rect button7;

	// Token: 0x040052B2 RID: 21170
	private Rect button8;
}
