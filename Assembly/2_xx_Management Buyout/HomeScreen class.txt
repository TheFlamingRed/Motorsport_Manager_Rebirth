using System;
using System.Collections.Generic;
using System.IO;
using UnityEngine;

// Token: 0x020006BC RID: 1724
public class HomeScreen : UIScreen
{
	// Token: 0x0600307B RID: 12411
	public HomeScreen()
	{
	}

	// Token: 0x0600307C RID: 12412
	public override void OnStart()
	{
		base.OnStart();
		this.nextRaceWidget.OnStart();
		this.infoPanelWidget.OnStart();
	}

	// Token: 0x0600307D RID: 12413
	public override void OnEnter()
	{
		base.OnEnter();
		scSoundManager.BlockSoundEvents = true;
		base.SetBottomBarMode(UIBottomBar.Mode.Frontend);
		base.SetTopBarMode(UITopBar.Mode.Frontend);
		base.showNavigationBars = true;
		if (!Game.instance.player.IsUnemployed())
		{
			this.teamInfoWidget.Setup();
			this.infoPanelWidget.Setup();
			this.teamStatsWidget.Setup();
			this.chairmanWidget.Setup();
			this.wipWidget.Setup();
			this.nextRaceWidget.Setup();
			this.mChampionship = Game.instance.player.team.championship;
			this.miniStandingsWidget.OnEnter(this.mChampionship);
		}
		scSoundManager.BlockSoundEvents = false;
		this.LoadScene();
	}

	// Token: 0x0600307E RID: 12414
	private void CheckDemoFinished()
	{
		if (Game.instance.championshipManager.GetChampionshipByID(0).eventNumberForUI > 3)
		{
			GenericConfirmation dialog = UIManager.instance.dialogBoxManager.GetDialog<GenericConfirmation>();
			UIManager.instance.blur.Show(dialog.gameObject, new Canvas[]
			{
				UIManager.instance.dialogBoxManager.canvas
			});
			Action quitToMainMenuAction = MMDropdown.GetQuitToMainMenuAction();
			string inTitle = "Thank You For Playing!";
			string inText = "You have reached the end of the demo!\nThank you for playing!\nWe hope you had fun!";
			string inConfirmString = Localisation.LocaliseID("PSG_10009081", null);
			dialog.Show(null, string.Empty, quitToMainMenuAction, inConfirmString, inText, inTitle);
		}
	}

	// Token: 0x0600307F RID: 12415
	private void LoadScene()
	{
		GameUtility.SetActive(this.carCamera, base.screenMode == UIScreen.ScreenMode.Mode3D);
		GameUtility.SetActive(this.carBackgroundParent, base.screenMode == UIScreen.ScreenMode.Mode2D);
		if (base.screenMode == UIScreen.ScreenMode.Mode3D)
		{
			SceneManager.instance.SwitchScene("TrackFrontEnd");
			GameObject sceneGameObject = SceneManager.instance.GetSceneGameObject("TrackFrontEnd");
			this.mStudioScene = sceneGameObject.GetComponent<StudioScene>();
			if (this.mChampionship != null)
			{
				this.mStudioScene.SetSeries(this.mChampionship.series);
			}
			this.mStudioScene.SetCarType(StudioScene.Car.CurrentCar);
			this.mStudioScene.SetCarVisualsToCurrentGame();
			this.mStudioScene.EnableCamera("ToTextureProfileCamera");
		}
		else
		{
			this.carBackground.SetCar(Game.instance.player.team);
		}
		scSoundManager.Instance.PlaySound(SoundID.Sfx_TransitionHome, 0f);
	}

	// Token: 0x06003080 RID: 12416
	public override void OnExit()
	{
		base.OnExit();
		this.miniStandingsWidget.OnExit();
		if (App.instance.gameStateManager.currentState is FrontendState)
		{
			this.UnloadScene();
		}
	}

	// Token: 0x06003081 RID: 12417
	private void UnloadScene()
	{
		if (base.screenMode == UIScreen.ScreenMode.Mode3D)
		{
			this.mStudioScene.TuneSpotlight(true);
			this.mStudioScene.SetCameraTargetToTrackAlongCar(false);
			SceneManager.instance.LeaveCurrentScene();
		}
	}

	// Token: 0x06003082 RID: 12418
	private void OnGUI()
	{
		Game.instance.championshipManager.GetChampionshipByID(0).standings.GetTeamList();
		EntityManager entityManager = Game.instance.entityManager;
		List<DatabaseEntry> teamData = App.instance.database.teamData;
		Team inTeam = Game.instance.player.team;
		Team inTeam2 = Game.instance.player.team;
		Team inTeam3 = Game.instance.player.team;
		float moneyPlayerNeedsToBuy = 100000f * (Mathf.Round(Game.instance.player.team.GetStarsStat() * Game.instance.player.team.GetStarsStat() * 1000000f / 100000f) / Game.instance.player.stats.financial);
		if (!Game.instance.player.team.isCreatedByPlayer)
		{
			if ((float)Game.instance.player.playerMoney > moneyPlayerNeedsToBuy)
			{
				this.guistyle.normal.background = this.texture2D;
				this.guistyle.hover.background = this.texture2D3;
			}
			if (GUI.Button(this.button1, "", this.guistyle) && (float)Game.instance.player.playerMoney > moneyPlayerNeedsToBuy)
			{
				Action inOnTransactionSucess = delegate()
				{
					Game.instance.player.playerMoney -= (long)moneyPlayerNeedsToBuy;
					Game.instance.player.team.customLogo.teamFirstName = Game.instance.player.managementBuyoutMainText;
					Game.instance.player.team.customLogo.teamLasttName = Game.instance.player.managementBuyoutSubtext;
					Game.instance.player.team.name = Game.instance.player.managementBuyoutFullname;
					Game.instance.player.team.customLogo.styleID = Game.instance.player.managementBuyoutLogoStyle - 1;
					Game.instance.player.team.GetTeamColor().customLogoColor.primary = Game.instance.player.team.GetTeamColor().livery.primary;
					Game.instance.player.team.GetTeamColor().customLogoColor.secondary = Game.instance.player.team.GetTeamColor().livery.secondary;
					Game.instance.player.hasCreatedTeam = true;
					Game.instance.player.createdTeamID = Game.instance.player.team.teamID;
					Game.instance.player.team.isCreatedByPlayer = true;
					MovieScreen screen4 = UIManager.instance.GetScreen<MovieScreen>();
					screen4.PlayTeamMovie(SoundID.Video_TeamLogo, Game.instance.player.team.teamID);
					screen4.SetNextScreen("PlayerScreen", 1.5f, null);
					UIManager.instance.ChangeScreen("MovieScreen", UIManager.ScreenTransition.None, 0f, null, UIManager.NavigationType.Normal);
					Game.instance.player.team.HandleChairmanRetirementRequest(Game.instance.player.team.chairman);
					UIManager.instance.ClearNavigationStacks();
					Game.instance.player.team.chairman.ModifyHappiness(100f, "Happy to invest in the team");
				};
				Transaction transaction = new Transaction(Transaction.Group.GlobalMotorsport, Transaction.Type.Debit, 50000L, "Regestration fee");
				Game.instance.player.team.financeController.finance.ProcessTransactions(inOnTransactionSucess, null, true, new Transaction[]
				{
					transaction
				});
			}
			if (GUI.Button(this.button2, "", this.guistyle2))
			{
				this.buyoutHelper = !this.buyoutHelper;
			}
			if (this.buyoutHelper && GUI.Button(this.button3, "\n You will need Â£" + moneyPlayerNeedsToBuy.ToString() + " capital and further investment from some investors to buyout this team. Increase your Finance stat to increase the investor contributions and lower your needed capital", this.guistyle3))
			{
				this.buyoutHelper = !this.buyoutHelper;
			}
		}
		if (this.flag && Game.instance.player.team.championship.championshipID != 0 && Game.instance.player.team.championship.championshipID != 1 && Game.instance.player.team.championship.championshipID != 2 && GUI.Button(this.button4, "", this.guistyle4))
		{
			Game.instance.MakePlayerUnemployedswitch();
			Game.instance.MakePlayerEmployedSwitch(inTeam);
			MovieScreen screen = UIManager.instance.GetScreen<MovieScreen>();
			screen.PlayTeamMovie(SoundID.Video_TeamLogo, Game.instance.player.team.teamID);
			screen.SetNextScreen("PlayerScreen", 1.5f, null);
			UIManager.instance.ChangeScreen("MovieScreen", UIManager.ScreenTransition.None, 0f, null, UIManager.NavigationType.Normal);
			Game.instance.player.team.HandleChairmanRetirementRequest(Game.instance.player.team.chairman);
			UIManager.instance.ClearNavigationStacks();
		}
		if (this.flag2 && Game.instance.player.team.championship.championshipID != 3 && Game.instance.player.team.championship.championshipID != 4 && GUI.Button(this.button5, "", this.guistyle5))
		{
			Game.instance.MakePlayerUnemployedswitch();
			Game.instance.MakePlayerEmployedSwitch(inTeam2);
			MovieScreen screen2 = UIManager.instance.GetScreen<MovieScreen>();
			screen2.PlayTeamMovie(SoundID.Video_TeamLogo, Game.instance.player.team.teamID);
			screen2.SetNextScreen("PlayerScreen", 1.5f, null);
			UIManager.instance.ChangeScreen("MovieScreen", UIManager.ScreenTransition.None, 0f, null, UIManager.NavigationType.Normal);
			Game.instance.player.team.HandleChairmanRetirementRequest(Game.instance.player.team.chairman);
			UIManager.instance.ClearNavigationStacks();
		}
		if (this.flag3 && Game.instance.player.team.championship.championshipID != 5 && Game.instance.player.team.championship.championshipID != 6 && GUI.Button(this.button6, "", this.guistyle6))
		{
			Game.instance.MakePlayerUnemployedswitch();
			Game.instance.MakePlayerEmployedSwitch(inTeam3);
			MovieScreen screen3 = UIManager.instance.GetScreen<MovieScreen>();
			screen3.PlayTeamMovie(SoundID.Video_TeamLogo, Game.instance.player.team.teamID);
			screen3.SetNextScreen("PlayerScreen", 1.5f, null);
			UIManager.instance.ChangeScreen("MovieScreen", UIManager.ScreenTransition.None, 0f, null, UIManager.NavigationType.Normal);
			Game.instance.player.team.HandleChairmanRetirementRequest(Game.instance.player.team.chairman);
			UIManager.instance.ClearNavigationStacks();
		}
		if (GUI.Button(this.button7, "Invest in the team", this.guistyle7))
		{
			long num2 = (long)Mathf.FloorToInt((float)Game.instance.player.playerMoney * 0.5f);
			float inHappiness = Mathf.Max(20f, Mathf.Floor((float)Game.instance.player.playerMoney * 0.5f) / 1000000f);
			Game.instance.player.team.chairman.ModifyHappiness(inHappiness, "Pleased you invested in the team");
			Action inOnTransactionSucess2 = delegate()
			{
				Game.instance.player.playerMoney -= num2;
			};
			Transaction transaction2 = new Transaction(Transaction.Group.GlobalMotorsport, Transaction.Type.Credit, num2, "Investment from " + Game.instance.player.firstName + " " + Game.instance.player.lastName);
			Game.instance.player.team.financeController.finance.ProcessTransactions(inOnTransactionSucess2, null, true, new Transaction[]
			{
				transaction2
			});
		}
	}

	// Token: 0x06004C22 RID: 19490
	private void Start()
	{
		this.texture2D = new Texture2D(180, 33);
		this.texture2D2 = new Texture2D(180, 33);
		this.texture2D3 = new Texture2D(180, 33);
		this.texture2D4 = new Texture2D(180, 33);
		this.texture2D5 = new Texture2D(180, 33);
		this.texture2D6 = new Texture2D(180, 33);
		this.texture2D7 = new Texture2D(180, 33);
		this.texture2D8 = new Texture2D(180, 33);
		this.texture2D9 = new Texture2D(180, 33);
		this.texture2D10 = new Texture2D(180, 33);
		this.texture2D11 = new Texture2D(180, 33);
		this.texture2D12 = new Texture2D(180, 33);
		this.texture2D13 = new Texture2D(180, 33);
		this.texture2D14 = new Texture2D(180, 33);
		this.texture2D15 = new Texture2D(180, 33);
		this.texture2D16 = new Texture2D(180, 33);
		this.guistyle = new GUIStyle();
		this.guistyle2 = new GUIStyle();
		this.guistyle3 = new GUIStyle();
		this.guistyle4 = new GUIStyle();
		this.guistyle5 = new GUIStyle();
		this.guistyle6 = new GUIStyle();
		this.guistyle7 = new GUIStyle();
		this.button1 = new Rect((float)Screen.width * 0.125f, (float)Screen.height * 0.9055f, (float)Screen.width * 180f / 1920f, (float)Screen.height * 33f / 1080f);
		this.button2 = new Rect((float)Screen.width * 0.1f, (float)Screen.height * 0.9055f, (float)Screen.width * 18f / 1920f, (float)Screen.height * 19f / 1080f);
		this.button3 = new Rect((float)Screen.width * 0.4f, (float)Screen.height * 0.5f, (float)Screen.width * 505f / 1920f, (float)Screen.height * 144f / 1080f);
		this.button4 = new Rect((float)Screen.width * 0.25f, (float)Screen.height * 0.9055f, (float)Screen.width * 180f / 1920f, (float)Screen.height * 33f / 1080f);
		this.button5 = new Rect((float)Screen.width * 0.35f, (float)Screen.height * 0.9055f, (float)Screen.width * 180f / 1920f, (float)Screen.height * 33f / 1080f);
		this.button6 = new Rect((float)Screen.width * 0.45f, (float)Screen.height * 0.9055f, (float)Screen.width * 180f / 1920f, (float)Screen.height * 33f / 1080f);
		this.button7 = new Rect((float)Screen.width * 0.6f, (float)Screen.height * 0.9055f, (float)Screen.width * 180f / 1920f, (float)Screen.height * 33f / 1080f);
		this.guistyle3.padding = new RectOffset(10, 10, 10, 10);
		List<Team> teamList = Game.instance.championshipManager.GetChampionshipByID(0).standings.GetTeamList();
		EntityManager entityManager = Game.instance.entityManager;
		List<DatabaseEntry> teamData = App.instance.database.teamData;
		Team team = Game.instance.player.team;
		Team team2 = Game.instance.player.team;
		Team team3 = Game.instance.player.team;
		teamList = Game.instance.championshipManager.GetChampionshipByID(0).standings.GetTeamList();
		for (int i = 0; i < teamList.Count; i++)
		{
			if (teamList[i].teamID == Game.instance.player.team.teamID)
			{
				this.flag = true;
				Team team4 = teamList[i];
			}
		}
		teamList = Game.instance.championshipManager.GetChampionshipByID(1).standings.GetTeamList();
		for (int j = 0; j < teamList.Count; j++)
		{
			if (teamList[j].teamID == Game.instance.player.team.teamID)
			{
				this.flag = true;
				Team team5 = teamList[j];
			}
		}
		teamList = Game.instance.championshipManager.GetChampionshipByID(2).standings.GetTeamList();
		for (int k = 0; k < teamList.Count; k++)
		{
			if (teamList[k].teamID == Game.instance.player.team.teamID)
			{
				this.flag = true;
				Team team6 = teamList[k];
			}
		}
		teamList = Game.instance.championshipManager.GetChampionshipByID(3).standings.GetTeamList();
		for (int l = 0; l < teamList.Count; l++)
		{
			if (teamList[l].teamID == Game.instance.player.team.teamID)
			{
				this.flag2 = true;
				Team team7 = teamList[l];
			}
		}
		teamList = Game.instance.championshipManager.GetChampionshipByID(4).standings.GetTeamList();
		for (int m = 0; m < teamList.Count; m++)
		{
			if (teamList[m].teamID == Game.instance.player.team.teamID)
			{
				this.flag2 = true;
				Team team8 = teamList[m];
			}
		}
		teamList = Game.instance.championshipManager.GetChampionshipByID(5).standings.GetTeamList();
		for (int n = 0; n < teamList.Count; n++)
		{
			if (teamList[n].teamID == Game.instance.player.team.teamID)
			{
				this.flag3 = true;
				Team team9 = teamList[n];
			}
		}
		teamList = Game.instance.championshipManager.GetChampionshipByID(6).standings.GetTeamList();
		for (int num = 0; num < teamList.Count; num++)
		{
			if (teamList[num].teamID == Game.instance.player.team.teamID)
			{
				this.flag3 = true;
				Team team10 = teamList[num];
			}
		}
		byte[] data = File.ReadAllBytes("texture/TeamBuyout.png");
		this.texture2D.LoadImage(data);
		data = File.ReadAllBytes("texture/TeamBuyoutg.png");
		this.texture2D2.LoadImage(data);
		data = File.ReadAllBytes("texture/TeamBuyouth.png");
		this.texture2D3.LoadImage(data);
		this.guistyle.alignment = TextAnchor.MiddleCenter;
		this.guistyle.normal.background = this.texture2D2;
		this.guistyle.hover.background = this.texture2D2;
		data = File.ReadAllBytes("texture/icon.png");
		this.texture2D4.LoadImage(data);
		data = File.ReadAllBytes("texture/iconh.png");
		this.texture2D5.LoadImage(data);
		this.guistyle2.alignment = TextAnchor.MiddleCenter;
		this.guistyle2.normal.background = this.texture2D4;
		this.guistyle2.hover.background = this.texture2D5;
		data = File.ReadAllBytes("texture/BuyoutHelper.png");
		this.texture2D6.LoadImage(data);
		this.guistyle3.alignment = TextAnchor.MiddleCenter;
		this.guistyle3.wordWrap = true;
		this.guistyle3.normal.background = this.texture2D6;
		this.guistyle3.normal.textColor = Color.white;
		byte[] data2 = File.ReadAllBytes("texture/SwitchSS.png");
		this.texture2D7.LoadImage(data2);
		data2 = File.ReadAllBytes("texture/SwitchSSh.png");
		this.texture2D8.LoadImage(data2);
		this.guistyle4.normal.background = this.texture2D7;
		this.guistyle4.hover.background = this.texture2D8;
		byte[] data3 = File.ReadAllBytes("texture/SwitchGT.png");
		this.texture2D9.LoadImage(data3);
		data3 = File.ReadAllBytes("texture/SwitchGTh.png");
		this.texture2D10.LoadImage(data3);
		this.guistyle5.normal.background = this.texture2D9;
		this.guistyle5.hover.background = this.texture2D10;
		byte[] data4 = File.ReadAllBytes("texture/SwitchEN.png");
		this.texture2D11.LoadImage(data4);
		data4 = File.ReadAllBytes("texture/SwitchENh.png");
		this.texture2D12.LoadImage(data4);
		this.guistyle6.normal.background = this.texture2D11;
		this.guistyle6.hover.background = this.texture2D12;
		byte[] data5 = File.ReadAllBytes("texture/dark.png");
		this.texture2D13.LoadImage(data5);
		data5 = File.ReadAllBytes("texture/darkh.png");
		this.texture2D14.LoadImage(data5);
		this.guistyle7.normal.background = this.texture2D13;
		this.guistyle7.hover.background = this.texture2D14;
		this.guistyle7.alignment = TextAnchor.MiddleCenter;
		this.guistyle7.normal.textColor = Color.white;
		this.guistyle7.fontSize = 14;
	}

	// Token: 0x04002C6B RID: 11371
	public HomeScreenTeamInfoWidget teamInfoWidget;

	// Token: 0x04002C6C RID: 11372
	public HomeScreenTeamStatsWidget teamStatsWidget;

	// Token: 0x04002C6D RID: 11373
	public HomeScreenStatsInfoWidget infoPanelWidget;

	// Token: 0x04002C6E RID: 11374
	public HomeScreenChairmanWidget chairmanWidget;

	// Token: 0x04002C6F RID: 11375
	public HomeScreenWipWidget wipWidget;

	// Token: 0x04002C70 RID: 11376
	public HomeScreenNextRaceWidget nextRaceWidget;

	// Token: 0x04002C71 RID: 11377
	public MiniStandingsWidget miniStandingsWidget;

	// Token: 0x04002C72 RID: 11378
	public UIGenericCarBackground carBackground;

	// Token: 0x04002C73 RID: 11379
	public GameObject carBackgroundParent;

	// Token: 0x04002C74 RID: 11380
	public GameObject carCamera;

	// Token: 0x04002C75 RID: 11381
	private Championship mChampionship;

	// Token: 0x04002C76 RID: 11382
	private StudioScene mStudioScene;

	// Token: 0x04002C77 RID: 11383
	public bool buyoutHelper;

	// Token: 0x04004F3D RID: 20285
	private Texture2D texture2D;

	// Token: 0x04004F3E RID: 20286
	private Texture2D texture2D2;

	// Token: 0x04004F3F RID: 20287
	private Texture2D texture2D3;

	// Token: 0x04004F40 RID: 20288
	private Texture2D texture2D4;

	// Token: 0x04004F41 RID: 20289
	private Texture2D texture2D5;

	// Token: 0x04004F42 RID: 20290
	private Texture2D texture2D6;

	// Token: 0x04004F43 RID: 20291
	private Texture2D texture2D7;

	// Token: 0x04004F44 RID: 20292
	private Texture2D texture2D8;

	// Token: 0x04004F45 RID: 20293
	private Texture2D texture2D9;

	// Token: 0x04004F46 RID: 20294
	private Texture2D texture2D10;

	// Token: 0x04004F47 RID: 20295
	private Texture2D texture2D11;

	// Token: 0x04004F48 RID: 20296
	private Texture2D texture2D12;

	// Token: 0x04004F49 RID: 20297
	private Texture2D texture2D13;

	// Token: 0x04004F4A RID: 20298
	private Texture2D texture2D14;

	// Token: 0x04004F4B RID: 20299
	private Texture2D texture2D15;

	// Token: 0x04004F4C RID: 20300
	private Texture2D texture2D16;

	// Token: 0x04004F4D RID: 20301
	private GUIStyle guistyle;

	// Token: 0x04004F4E RID: 20302
	private GUIStyle guistyle2;

	// Token: 0x04004F4F RID: 20303
	private GUIStyle guistyle3;

	// Token: 0x04004F50 RID: 20304
	private GUIStyle guistyle4;

	// Token: 0x04004F51 RID: 20305
	private GUIStyle guistyle5;

	// Token: 0x04004F52 RID: 20306
	private GUIStyle guistyle6;

	// Token: 0x04004F53 RID: 20307
	private GUIStyle guistyle7;

	// Token: 0x04004F85 RID: 20357
	private Rect button1;

	// Token: 0x04004F86 RID: 20358
	private Rect button2;

	// Token: 0x04004F87 RID: 20359
	private Rect button3;

	// Token: 0x04004F88 RID: 20360
	private Rect button4;

	// Token: 0x04004F89 RID: 20361
	private Rect button5;

	// Token: 0x04004F8A RID: 20362
	private Rect button6;

	// Token: 0x04004F8B RID: 20363
	private Rect button7;

	// Token: 0x04004FE2 RID: 20450
	private bool flag;

	// Token: 0x04004FE3 RID: 20451
	private bool flag2;

	// Token: 0x04004FE4 RID: 20452
	private bool flag3;
}
