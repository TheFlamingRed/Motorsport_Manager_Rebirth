using System;
using System.Collections.Generic;
using FullSerializer;
using UnityEngine;

// Token: 0x020000FE RID: 254
[fsObject(MemberSerialization = fsMemberSerialization.OptOut)]
public partial class CarPartDesign
{
	// Token: 0x060005DD RID: 1501
	public string GetDesignTimeBreakdown()
	{
		string text = GameUtility.ColorToRichTextHex(UIConstants.positiveColor);
		string arg = GameUtility.ColorToRichTextHex(UIConstants.negativeColor);
		PartTypeSlotSettings partTypeSlotSettings = Game.instance.partSettingsManager.championshipPartSettings[this.mTeam.championship.championshipID][this.mCarPart.GetPartType()];
		string text2 = string.Empty;
		StringVariableParser.ordinalNumberString = arg + partTypeSlotSettings.buildTimeDays;
		text2 += Localisation.LocaliseID("PSG_10010519", null);
		HQsBuilding_v1 building = this.mTeam.headquarters.GetBuilding(HQsBuildingInfo.Type.DesignCentre);
		if (building != null && building.isBuilt)
		{
			float num = Mathf.Abs(HQsBuilding_v1.designCentrePartDaysPerLevel[building.currentLevel]);
			if (num != 0f)
			{
				StringVariableParser.ordinalNumberString = text + num.ToString("0.#") + "</color>";
				text2 = text2 + "\n" + Localisation.LocaliseID("PSG_10012148", null);
			}
			float manager = (Game.instance.player.stats.loyalty + Game.instance.player.stats.raceManagement) / 200f;
			num = partTypeSlotSettings.buildTimeDays;
			if (this.mCarPart.GetPartType() == CarPart.PartType.Engine || this.mCarPart.GetPartType() == CarPart.PartType.EngineGT || this.mCarPart.GetPartType() == CarPart.PartType.EngineGET)
			{
				num = Mathf.Floor((this.mTeam.chairman.attitudeTypeA - manager) * num);
				if (num > 0f)
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n + ",
						arg,
						num.ToString("0.#"),
						"</color> from Team Management"
					});
				}
				else
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n - ",
						text,
						(num * -1f).ToString("0.#"),
						"</color> from Team Management"
					});
				}
			}
			if (this.mCarPart.GetPartType() == CarPart.PartType.Brakes || this.mCarPart.GetPartType() == CarPart.PartType.BrakesGT || this.mCarPart.GetPartType() == CarPart.PartType.BrakesGET)
			{
				num = Mathf.Floor((this.mTeam.chairman.attitudeTypeB - manager) * num);
				if (num > 0f)
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n + ",
						arg,
						num.ToString("0.#"),
						"</color> from Team Management"
					});
				}
				else
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n - ",
						text,
						(num * -1f).ToString("0.#"),
						"</color> from Team Management"
					});
				}
			}
			if (this.mCarPart.GetPartType() == CarPart.PartType.FrontWing || this.mCarPart.GetPartType() == CarPart.PartType.FrontWingGET)
			{
				num = Mathf.Floor((this.mTeam.chairman.attitudeTypeC - manager) * num);
				if (num > 0f)
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n + ",
						arg,
						num.ToString("0.#"),
						"</color> from Team Management"
					});
				}
				else
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n - ",
						text,
						(num * -1f).ToString("0.#"),
						"</color> from Team Management"
					});
				}
			}
			if (this.mCarPart.GetPartType() == CarPart.PartType.Gearbox || this.mCarPart.GetPartType() == CarPart.PartType.GearboxGT || this.mCarPart.GetPartType() == CarPart.PartType.GearboxGET)
			{
				num = Mathf.Floor((this.mTeam.chairman.attitudeTypeD - manager) * num);
				if (num > 0f)
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n + ",
						arg,
						num.ToString("0.#"),
						"</color> from Team Management"
					});
				}
				else
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n - ",
						text,
						(num * -1f).ToString("0.#"),
						"</color> from Team Management"
					});
				}
			}
			if (this.mCarPart.GetPartType() == CarPart.PartType.Suspension || this.mCarPart.GetPartType() == CarPart.PartType.SuspensionGT || this.mCarPart.GetPartType() == CarPart.PartType.SuspensionGET)
			{
				num = Mathf.Floor((this.mTeam.chairman.attitudeTypeE - manager) * num);
				if (num > 0f)
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n + ",
						arg,
						num.ToString("0.#"),
						"</color> from Team Management"
					});
				}
				else
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n - ",
						text,
						(num * -1f).ToString("0.#"),
						"</color> from Team Management"
					});
				}
			}
			if (this.mCarPart.GetPartType() == CarPart.PartType.RearWing || this.mCarPart.GetPartType() == CarPart.PartType.RearWingGT || this.mCarPart.GetPartType() == CarPart.PartType.RearWingGET)
			{
				num = Mathf.Floor((this.mTeam.chairman.attitudeTypeF - manager) * num);
				if (num > 0f)
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n + ",
						arg,
						num.ToString("0.#"),
						"</color> from Team Management"
					});
				}
				else
				{
					text2 = string.Concat(new string[]
					{
						text2,
						"\n - ",
						text,
						(num * -1f).ToString("0.#"),
						"</color> from Team Management"
					});
				}
			}
		}
		if (this.mTeam.IsPlayersTeam() && Game.instance.player.playerBackStoryType == PlayerBackStory.PlayerBackStoryType.ExEngineer)
		{
			StringVariableParser.ordinalNumberString = text + Game.instance.player.designPartTimeModifier.TotalDays;
			text2 = text2 + "\n" + Localisation.LocaliseID("PSG_10010518", null);
		}
		if (this.mComponentTimeDaysBonus != 0f)
		{
			if (this.mComponentTimeDaysBonus > 0f)
			{
				StringVariableParser.ordinalNumberString = arg + this.mComponentTimeDaysBonus;
				text2 = text2 + "\n" + Localisation.LocaliseID("PSG_10010520", null);
			}
			else
			{
				StringVariableParser.ordinalNumberString = text + this.mComponentTimeDaysBonus;
				text2 = text2 + "\n" + Localisation.LocaliseID("PSG_10010521", null);
			}
		}
		for (int i = 0; i < this.mCarPart.components.Count; i++)
		{
			float num2 = 0f;
			CarPartComponent carPartComponent = this.mCarPart.components[i];
			if (carPartComponent != null)
			{
				if (carPartComponent.productionTime != 0f)
				{
					num2 = carPartComponent.productionTime;
				}
				else if (carPartComponent.componentType != CarPartComponent.ComponentType.Engineer)
				{
					num2 = partTypeSlotSettings.timePerLevel[carPartComponent.level - 1];
				}
				if (num2 != 0f)
				{
					if (num2 > 0f)
					{
						StringVariableParser.ordinalNumberString = arg + num2;
						text2 = text2 + "\n" + Localisation.LocaliseID("PSG_10010520", null);
					}
					else
					{
						StringVariableParser.ordinalNumberString = text + num2;
						text2 = text2 + "\n" + Localisation.LocaliseID("PSG_10010521", null);
					}
				}
			}
		}
		return text2;
	}
}
