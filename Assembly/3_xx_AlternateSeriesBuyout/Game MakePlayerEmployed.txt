	public void MakePlayerEmployed(Team inTeam)
	{
		if (this.player.IsUnemployed())
		{
			bool arg_38_0 = App.instance.gameStateManager.currentState is FrontendState;
			this.LoadDesignDataForSeries(inTeam.championship.series);
			if (arg_38_0)
			{
				this.player.team = inTeam;
				App.instance.uiTeamColourManager.SetToPlayerTeamColour();
				this.messageManager.ClearDelayedMessages();
				this.player.team.NotifyIsOwnedByPlayer();
				this.player.team.sponsorController.SetNotifications();
				this.SetupPlayerContract(inTeam);
				inTeam.chairman.ResetHappiness();
				inTeam.pitCrewController.OnPlayerJoinTeam();
				this.pitCrewManager.OnPlayerJoinTeam();
				this.dialogSystem.OnStartGameMessages();
				this.calendar.UpdateEventsShownOnCalendar();
				if ((!ConsoleCommands.testSeasons && inTeam.financeController.finance.currentBudget < -5000000L) || inTeam.financeController.finance.currentBudget > 25000000L)
				{
					long inBudget = inTeam.financeController.availableFunds;
					inTeam.financeController.AllocateFunds(inBudget, Game.instance.time.now);
				}
				UIManager.instance.OnPlayerTeamChanged();
			}
			this.scoutingManager.UpdateUnlockedScoutingSlots();
		}
	}