using System;
using System.Collections.Generic;
using FullSerializer;

// Token: 0x020000D1 RID: 209
[fsObject(MemberSerialization = fsMemberSerialization.OptOut)]
public partial class DilemmaSystem : InstanceCounter
{
	public // Token: 0x0600045A RID: 1114 RVA: 0x0001D8CC File Offset: 0x0001BACC
	void ModifyPartStat(CarPartStats.CarPartStat inStatType, CarPart.PartType inType, string inStatModifier, DilemmaSystem.DilemmaMessageData inDilemmaData)
	{
		float inModifierValue;
		if (float.TryParse(inStatModifier, out inModifierValue))
		{
			Team team = Game.instance.player.team;
			
				List<CarPart> mostRecentParts = team.carManager.partInventory.GetMostRecentParts(2, inType);
				GameUtility.Assert(mostRecentParts.Count == 2, string.Format("DilemmaSystem.ModifyPartStat there are not two parts in the inventory, total number of parts from the inventory is {0}", mostRecentParts.Count), null);
				for (int i = 0; i < mostRecentParts.Count; i++)
				{
					this.ModifyCarPartStat(mostRecentParts[i], inStatType, inModifierValue);
				}
			
		}
	}
}
