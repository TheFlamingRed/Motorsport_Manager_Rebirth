using System;
using FullSerializer;
using UnityEngine;

// Token: 0x0200040D RID: 1037
[fsObject(MemberSerialization = fsMemberSerialization.OptOut)]
public partial class DrivingStyle : PerformanceImpact
{
	// Token: 0x06001FD6 RID: 8150 RVA: 0x000CA9C0 File Offset: 0x000C8BC0
	public override void SimulationUpdate(float inDeltaTime)
	{
		base.SimulationUpdate(inDeltaTime);
		this.mTimerSinceLastTemperatureSwitch += inDeltaTime;
		float num = Mathf.Abs(this.mVehicle.setup.tyreSet.GetTemperature());
		float num2 = 0f;
		float num3 = 0f;
		this.GetPerformanceForDrivingStyle(this.mMode, out num2, out num3);
		float tyreTemperaturePerformanceModiffier = DesignDataManager.instance.tyreData.tyreTemperaturePerformanceModiffier;
		float tyreTemperatureWearModiffier = DesignDataManager.instance.tyreData.tyreTemperatureWearModiffier;
		float num4 = 0f;
		float num5 = 0f;
		if (num <= 0.05f && this.mMode == DrivingStyle.Mode.BackUp)
		{
			num4 = num2 * tyreTemperaturePerformanceModiffier;
			num5 = num3 * tyreTemperatureWearModiffier;
		}
		if (num >= 0.95f)
		{
			num5 = num3 * tyreTemperatureWearModiffier;
		}
		this.ClearTimeCost();
		this.mFinalTyreWearRate = this.mTyreWearRate + num5;
		float num6 = 1f - Mathf.Clamp01(this.mDriverStylePerformance - num4);
		base.IncreaseTimeCost(this.mCarPerformance.drivingStyle.maxDrivingStyleTimeCost * num6);
		if (!Game.instance.challengeManager.IsAttemptingChallenge())
		{
			float num7 = 0.4f;
			if (num7 > 0)
			{
				if (this.mVehicle.driver.IsPlayersDriver())
				{
					base.IncreaseTimeCost(num7);
				}
			}

			
		}
	}
}
