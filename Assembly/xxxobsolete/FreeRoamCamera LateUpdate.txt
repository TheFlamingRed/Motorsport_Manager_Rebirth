public void LateUpdate()
{
	if (this.target == null && (this.mState == FreeRoamCamera.State.FollowingTarget || this.mState == FreeRoamCamera.State.TransitionToTarget))
	{
		this.SetTarget(null, CameraManager.Transition.Instant, 0f, null);
	}
	this.mStateTimer += GameTimer.deltaTime;
	this.mDragDelayTimer += GameTimer.deltaTime;
	this.ApplyRotation();
	switch (this.mState)
	{
	case FreeRoamCamera.State.FreeRoam:
		this.UpdateFreeRoam();
		break;
	case FreeRoamCamera.State.FollowingTarget:
		this.UpdateFollowingTarget();
		break;
	case FreeRoamCamera.State.AutoRotating:
		this.UpdateAutoRotate();
		this.UpdateFollowingTarget();
		break;
	case FreeRoamCamera.State.TransitionAutoRotating:
		this.UpdateTransitionAutoRotate();
		this.UpdateFollowingTarget();
		break;
	case FreeRoamCamera.State.TransitionToTarget:
		this.UpdateTransitionToTarget();
		break;
	}
	if (this.mState != FreeRoamCamera.State.TransitionToTarget)
	{
		this.mZoom += this.mZoomSpeed;
	}
	this.mZoom = Mathf.Clamp(this.mZoom, this.cameraMinZoom - 175f, this.cameraMaxZoom);
	base.transform.localPosition = new Vector3(0f, 0f, -this.mZoom);
	this.mOrbitSpeedX *= 1f - GameTimer.deltaTime * 12f;
	this.mOrbitSpeedY *= 1f - GameTimer.deltaTime * 3f;
	this.mZoomSpeed *= 1f - GameTimer.deltaTime * 4f;
	if (!this.mDisablePanControls && this.mState != FreeRoamCamera.State.TransitionToTarget && (!Game.IsActive() || (Game.IsActive() && !Game.instance.time.IsPauseTypeActive(GameTimer.PauseType.App))))
	{
		if (App.instance.preferencesManager.GetSettingBool(Preference.pName.Game_Gamepad, false))
		{
			this.mZoomSpeed += (GamePad.GetLeftTrigger(PlayerIndex.One) - GamePad.GetRightTrigger(PlayerIndex.One)) * this.gamepadZoomSpeedModifier * GameTimer.deltaTime;
		}
		else
		{
			this.mZoomSpeedButtons = ((!InputManager.instance.GetKeyAny(KeyBinding.Name.ZoomIn)) ? 0f : 0.1f);
			this.mZoomSpeedButtons += ((!InputManager.instance.GetKeyAny(KeyBinding.Name.ZoomOut)) ? 0f : -0.1f);
			this.mZoomSpeed += (Input.GetAxis("Mouse ScrollWheel") + this.mZoomSpeedButtons) * this.zoomSpeedModifier * GameTimer.deltaTime;
		}
	}
	if (this.autoRotateAroundTarget && this.mState == FreeRoamCamera.State.FollowingTarget)
	{
		this.mAutoRotateTimer += GameTimer.deltaTime;
		if (this.mAutoRotateTimer >= this.autoRotateAfterSeconds)
		{
			this.mAutoRotateTimer = 0f;
			this.SetState(FreeRoamCamera.State.TransitionAutoRotating);
		}
	}
	if (this.OnLateUpdate != null)
	{
		this.OnLateUpdate();
	}
}