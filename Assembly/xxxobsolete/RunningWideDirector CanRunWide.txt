using System;
using System.Collections.Generic;
using FullSerializer;
using UnityEngine;

// Token: 0x020003DD RID: 989
[fsObject(MemberSerialization = fsMemberSerialization.OptOut)]
public partial class RunningWideDirector
{
	// Token: 0x06001BB0 RID: 7088
	public bool CanRunWide(RacingVehicle inVehicle, PathController.Path inPath)
	{
		if (inVehicle.sessionEvents.IsReadyTo(SessionEvents.EventType.SpinOut))
		{
			return true;
		}
		if (RandomUtility.GetRandom01() < (float)this.mRunWidePathUseCount[inPath.pathID] / 3f)
		{
			return false;
		}
		bool flag = inVehicle.setup.tyreSet.GetTread() != SessionStrategy.GetRecommendedTreadRightNow() && RandomUtility.GetRandom01() < 0.1f;
		if (this.mActiveRunWideChunk.runWideCount <= 0 || this.mCooldown >= 0f)
		{
			return false;
		}
		if (Game.instance.sessionManager.eventDetails.currentSession.sessionType == SessionDetails.SessionType.Qualifying)
		{
			return flag;
		}
		float t = inVehicle.driver.GetDriverStats().focus / 20f;
		float num = Mathf.Lerp(1.5f, 2f, t);
		SessionWeatherDetails currentSessionWeather = Game.instance.sessionManager.currentSessionWeather;
		bool flag5 = Game.instance.sessionManager.flag == SessionManager.Flag.Green;
		bool flag2 = currentSessionWeather.GetNormalizedTrackWater() > 0.5f && currentSessionWeather.GetNormalizedRain() > 0.2f;
		bool flag3 = inVehicle.timer.gapToAhead > 0.1f && inVehicle.timer.gapToAhead < num;
		bool flag4 = (inVehicle.timer.gapToBehind > 0.1f && inVehicle.timer.gapToBehind < num) || flag3;
		return flag5 && (flag4 || flag || flag2);
	}
}
