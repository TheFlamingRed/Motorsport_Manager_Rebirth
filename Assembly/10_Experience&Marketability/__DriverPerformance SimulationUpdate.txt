using System;
using FullSerializer;
using UnityEngine;

// Token: 0x0200040A RID: 1034
[fsObject(MemberSerialization = fsMemberSerialization.OptOut)]
public partial class DriverPerformance : PerformanceImpact
{
	// Token: 0x06001FC5 RID: 8133 RVA: 0x000CA13C File Offset: 0x000C833C
	public override void SimulationUpdate(float inDeltaTime)
	{
		base.SimulationUpdate(inDeltaTime);
		this.ClearTimeCost();
		DriverStats driverStats = this.mVehicle.driver.GetDriverStats();
		if (this.mStatsPartBonuses != null)
		{
			driverStats += this.mStatsPartBonuses;
		}
		float num = 1f - driverStats.GetUnitAverage();
		float num2 = (1f - Mathf.Clamp01(driverStats.experience)) * 2f;
		if (this.mVehicle.championship.rules.driverAidsOn)
		{
			base.IncreaseTimeCost(this.mCarPerformance.driverPerformance.maxDriverTimeCostWithDriverAidsOn * num + num2);
		}
		else
		{
			base.IncreaseTimeCost(this.mCarPerformance.driverPerformance.maxDriverTimeCostWithDriverAidsOff * num + num2);
		}
		if (this.mVehicle.championship.series == Championship.Series.EnduranceSeries)
		{
			base.IncreaseTimeCost(this.mDriverSetupPreferences.GetTimeCostForDriver(this.mVehicle.driver, this.mVehicle.carID));
		}
	}
}
