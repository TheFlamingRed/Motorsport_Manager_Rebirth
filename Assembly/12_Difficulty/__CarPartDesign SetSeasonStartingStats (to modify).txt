using System;
using System.Collections.Generic;
using FullSerializer;

// Token: 0x020000F5 RID: 245
[fsObject(MemberSerialization = fsMemberSerialization.OptOut)]
public partial class CarPartDesign
{
	// Token: 0x0600058A RID: 1418
	public void SetSeasonStartingStats()
	{
		CarPart.PartType[] partType = CarPart.GetPartType(this.mTeam.championship.series, false);
		float random = RandomUtility.GetRandom01();
		float num = (float)App.instance.preferencesManager.gamePreferences.GetAIDriverLevel();
		float num2 = 0f;
		if (Game.instance.time.now.Year > 2016)
		{
			num2 = (float)(Game.instance.player.team.GetExpectedChampionshipResult() - this.mTeam.GetExpectedChampionshipResult());
			if (num2 == 0f)
			{
				num2 += 1f;
			}
		}
		if (Game.instance.player.playerBackStoryType == PlayerBackStory.PlayerBackStoryType.UpandComingManager)
		{
			float raceManagement = Game.instance.player.stats.raceManagement;
			float num3 = MathsUtility.Clamp(num - raceManagement + 10f, 0f, 30f);
			for (int i = 0; i < partType.Length; i++)
			{
				CarPart.PartType partType2 = partType[i];
				CarPart partWithHighestStat = this.mTeam.carManager.partInventory.GetPartWithHighestStat(partType2, CarPartStats.CarPartStat.MainStat);
				Debug.Assert(partWithHighestStat != null, string.Format("{0} Original part is null, maybe theres no part being added from the database? Continuing with dummy data", partType2));
				if (partWithHighestStat == null)
				{
					this.mTeam.carManager.ResetParts(new CarStats());
				}
				if (partWithHighestStat != null && this.mTeam.IsPlayersTeam())
				{
					this.seasonPartStartingStat[partType2] = (int)partWithHighestStat.stats.statWithPerformance;
				}
				if (partWithHighestStat != null && this.mTeam.IsPlayersTeam() && random < 0.02f && num2 != 0f)
				{
					this.seasonPartStartingStat[partType2] = (int)(partWithHighestStat.stats.statWithPerformance + RandomUtility.GetRandom(20f, 20f + num3 * 4f));
					if (partType2 == CarPart.PartType.Brakes || CarPart.PartType.BrakesGT == partType2 || CarPart.PartType.BrakesGET == partType2)
					{
						StringVariableParser.rumourTeam = this.mTeam;
						StringVariableParser.carPart = partWithHighestStat;
						Game.instance.dialogSystem.SendMail(new DialogCriteria[]
						{
							new DialogCriteria("Who", "MediaPerson"),
							new DialogCriteria("Source", "SmallBoost"),
							new DialogCriteria("Type", "Header")
						});
					}
				}
				if (partWithHighestStat != null && !this.mTeam.IsPlayersTeam())
				{
					this.seasonPartStartingStat[partType2] = (int)(partWithHighestStat.stats.statWithPerformance * (1f + num3 / 400f) + num3 * 2f);
				}
				if (partWithHighestStat != null && !this.mTeam.IsPlayersTeam() && random < 0.2f && num2 > 0f)
				{
					this.seasonPartStartingStat[partType2] = (int)(partWithHighestStat.stats.statWithPerformance * (1f + num3 / 200f) + num3 * 4f);
					if (partType2 == CarPart.PartType.Brakes || CarPart.PartType.BrakesGT == partType2 || CarPart.PartType.BrakesGET == partType2)
					{
						StringVariableParser.rumourTeam = this.mTeam;
						StringVariableParser.carPart = partWithHighestStat;
						Game.instance.dialogSystem.SendMail(new DialogCriteria[]
						{
							new DialogCriteria("Who", "MediaPerson"),
							new DialogCriteria("Source", "SmallBoost"),
							new DialogCriteria("Type", "Header")
						});
					}
				}
				if (partWithHighestStat != null && !this.mTeam.IsPlayersTeam() && random < 0.2f && num2 < 0f)
				{
					this.seasonPartStartingStat[partType2] = (int)(partWithHighestStat.stats.statWithPerformance * (1f + num3 / 200f) + num3 * 8f);
					if (partType2 == CarPart.PartType.Brakes || CarPart.PartType.BrakesGT == partType2 || CarPart.PartType.BrakesGET == partType2)
					{
						StringVariableParser.rumourTeam = this.mTeam;
						StringVariableParser.carPart = partWithHighestStat;
						Game.instance.dialogSystem.SendMail(new DialogCriteria[]
						{
							new DialogCriteria("Who", "MediaPerson"),
							new DialogCriteria("Source", "BigBoost"),
							new DialogCriteria("Type", "Header")
						});
					}
				}
			}
		}
		if (Game.instance.player.playerBackStoryType != PlayerBackStory.PlayerBackStoryType.UpandComingManager)
		{
			for (int j = 0; j < partType.Length; j++)
			{
				CarPart.PartType partType3 = partType[j];
				CarPart partWithHighestStat2 = this.mTeam.carManager.partInventory.GetPartWithHighestStat(partType3, CarPartStats.CarPartStat.MainStat);
				Debug.Assert(partWithHighestStat2 != null, string.Format("{0} Original part is null, maybe theres no part being added from the database? Continuing with dummy data", partType3));
				if (partWithHighestStat2 == null)
				{
					this.mTeam.carManager.ResetParts(new CarStats());
				}
				if (partWithHighestStat2 != null && this.mTeam.IsPlayersTeam())
				{
					this.seasonPartStartingStat[partType3] = (int)partWithHighestStat2.stats.statWithPerformance;
				}
				if (partWithHighestStat2 != null && this.mTeam.IsPlayersTeam() && random < 0.02f && num2 != 0f)
				{
					this.seasonPartStartingStat[partType3] = (int)(partWithHighestStat2.stats.statWithPerformance + RandomUtility.GetRandom(20f, 20f + num * 4f));
					if (partType3 == CarPart.PartType.Brakes || CarPart.PartType.BrakesGT == partType3 || CarPart.PartType.BrakesGET == partType3)
					{
						StringVariableParser.rumourTeam = this.mTeam;
						StringVariableParser.carPart = partWithHighestStat2;
						Game.instance.dialogSystem.SendMail(new DialogCriteria[]
						{
							new DialogCriteria("Who", "MediaPerson"),
							new DialogCriteria("Source", "SmallBoost"),
							new DialogCriteria("Type", "Header")
						});
					}
				}
				if (partWithHighestStat2 != null && !this.mTeam.IsPlayersTeam())
				{
					this.seasonPartStartingStat[partType3] = (int)(partWithHighestStat2.stats.statWithPerformance * (1f + num / 400f) + num * 2f);
				}
				if (partWithHighestStat2 != null && !this.mTeam.IsPlayersTeam() && random < 0.2f && num2 > 0f)
				{
					this.seasonPartStartingStat[partType3] = (int)(partWithHighestStat2.stats.statWithPerformance * (1f + num / 200f) + num * 4f);
					if (partType3 == CarPart.PartType.Brakes || CarPart.PartType.BrakesGT == partType3 || CarPart.PartType.BrakesGET == partType3)
					{
						StringVariableParser.rumourTeam = this.mTeam;
						StringVariableParser.carPart = partWithHighestStat2;
						Game.instance.dialogSystem.SendMail(new DialogCriteria[]
						{
							new DialogCriteria("Who", "MediaPerson"),
							new DialogCriteria("Source", "SmallBoost"),
							new DialogCriteria("Type", "Header")
						});
					}
				}
				if (partWithHighestStat2 != null && !this.mTeam.IsPlayersTeam() && random < 0.2f && num2 < 0f)
				{
					this.seasonPartStartingStat[partType3] = (int)(partWithHighestStat2.stats.statWithPerformance * (1f + num / 200f) + num * 8f);
					if (partType3 == CarPart.PartType.Brakes || CarPart.PartType.BrakesGT == partType3 || CarPart.PartType.BrakesGET == partType3)
					{
						StringVariableParser.rumourTeam = this.mTeam;
						StringVariableParser.carPart = partWithHighestStat2;
						Game.instance.dialogSystem.SendMail(new DialogCriteria[]
						{
							new DialogCriteria("Who", "MediaPerson"),
							new DialogCriteria("Source", "BigBoost"),
							new DialogCriteria("Type", "Header")
						});
					}
				}
			}
		}
	}
}
