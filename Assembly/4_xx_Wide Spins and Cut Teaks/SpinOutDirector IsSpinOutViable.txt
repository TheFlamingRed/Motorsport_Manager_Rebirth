using System;
using FullSerializer;

// Token: 0x020003E3 RID: 995
[fsObject(MemberSerialization = fsMemberSerialization.OptOut)]
public partial class SpinOutDirector
{
	// Token: 0x06001BC8 RID: 7112
	public bool IsSpinOutViable(RacingVehicle inVehicle)
	{
		bool isTutorialActiveInCurrentGameState = Game.instance.tutorialSystem.isTutorialActiveInCurrentGameState;
		bool flag = Game.instance.sessionManager.flag != SessionManager.Flag.Chequered;
		bool flag2 = inVehicle.speed < 50f;
		bool flag3 = inVehicle.timer.gapToAhead < 5.2f - inVehicle.driver.GetDriverStats().overtaking / 4f;
		bool flag4 = Game.instance.sessionManager.currentSessionWeather.GetNormalizedTrackWater() > inVehicle.driver.GetDriverStats().adaptability / 20f;
		bool flag5 = Game.instance.sessionManager.GetNormalizedSessionTime() > inVehicle.driver.GetDriverStats().fitness / 20f;
		bool flag6 = inVehicle.timer.gapToBehind > 15f;
		return flag && flag2 && (flag3 || flag4 || flag5) && flag6 && !isTutorialActiveInCurrentGameState && !inVehicle.behaviourManager.isOutOfRace && inVehicle.sessionEvents.IsReadyTo(SessionEvents.EventType.SpinOut);
	}
}
