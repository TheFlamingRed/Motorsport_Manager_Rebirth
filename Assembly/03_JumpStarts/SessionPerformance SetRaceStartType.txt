public void SetRaceStartType(SessionPerformance.RaceStartType inRaceStartType)
{
	this.mRaceStartType = inRaceStartType;
	float num = 0f;
	bool flag = this.mVehicle.championship.series == Championship.Series.SingleSeaterSeries;
	float num2 = (float)this.mRacingPerformance.statsTotal / (float)this.mNeutralPerformance.statsTotal;
	if (num2 < 0.8f)
	{
		num -= 0.05f;
	
	}
	else if (num2 > 1.2f)
	{
		num += 0.05f;
		
	}
	switch (this.mRaceStartType)
	{
	case SessionPerformance.RaceStartType.Average:
		num += 1f;
		break;
	case SessionPerformance.RaceStartType.Great:
		num += ((!flag) ? 1.01f : 1.05f);
		break;
	case SessionPerformance.RaceStartType.Poor:
		num += ((!flag) ? 0.99f : 0.95f);
		break;
	case SessionPerformance.RaceStartType.Jump:
		num = ((!flag) ? 1.06f : 1.1f);

			Game.instance.sessionManager.raceDirector.penaltyDirector.ApplyPenaltyIfViable(this.mRacingVehicle, Penalty.PenaltyCause.JumpStart);
		
		break;
	}
	this.mRaceStartPerformance.Copy(this.mNeutralPerformance);
	this.mRaceStartPerformance.Scale(num);
}