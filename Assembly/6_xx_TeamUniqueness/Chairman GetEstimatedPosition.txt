using System;
using System.Collections.Generic;
using FullSerializer;
using UnityEngine;

// Token: 0x020001D0 RID: 464
[fsObject(MemberSerialization = fsMemberSerialization.OptOut)]
public partial class Chairman : Person
{
	// Token: 0x06000C1F RID: 3103
	public int GetEstimatedPosition(Chairman.EstimatedPosition inPosition, Team inTeam)
	{
		int startOfSeasonExpectedChampionshipResult = inTeam.startOfSeasonExpectedChampionshipResult;
		int teamEntryCount = inTeam.championship.standings.teamEntryCount;
		if (Game.instance.player.harderChairmanObjectives == 1)
		{
			switch (inPosition)
			{
			case Chairman.EstimatedPosition.Low:
				return Mathf.Clamp(startOfSeasonExpectedChampionshipResult + 2, 1, teamEntryCount);
			case Chairman.EstimatedPosition.Medium:
				return Mathf.Clamp(startOfSeasonExpectedChampionshipResult, 1, teamEntryCount);
			case Chairman.EstimatedPosition.High:
				return Mathf.Clamp(startOfSeasonExpectedChampionshipResult - 2, 1, teamEntryCount);
			default:
				return 0;
			}
		}
		else
		{
			switch (inPosition)
			{
			case Chairman.EstimatedPosition.Low:
				return Mathf.Clamp(startOfSeasonExpectedChampionshipResult - inTeam.chairman.attitudeExpectation + 1, 2, teamEntryCount);
			case Chairman.EstimatedPosition.Medium:
				return Mathf.Clamp(startOfSeasonExpectedChampionshipResult - inTeam.chairman.attitudeExpectation, 1, teamEntryCount);
			case Chairman.EstimatedPosition.High:
				return Mathf.Clamp(startOfSeasonExpectedChampionshipResult - inTeam.chairman.attitudeExpectation - 1, 1, teamEntryCount);
			default:
				return 0;
			}
		}
	}
}
